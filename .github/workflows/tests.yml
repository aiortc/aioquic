name: tests

on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install packages
        run: pip install black flake8 isort mypy
      - name: Run linters
        run: |
          flake8 examples src tests
          isort -c -df -rc examples src tests
          black --check --diff examples src tests
          mypy examples src

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.8, 3.7, 3.6, pypy3]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Disable firewall and configure compiler
        if: matrix.os == 'macos-latest'
        run: |
          sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
          echo "::set-env name=CFLAGS::-I/usr/local/opt/openssl/include"
          echo "::set-env name=LDFLAGS::-L/usr/local/opt/openssl/lib"
      - name: Run tests
        run: |
          pip install -U pip setuptools wheel
          pip install coverage
          pip install .
          coverage run -m unittest discover -v
          coverage xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        if: matrix.python != 'pypy3'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  package:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Build package
        run: python setup.py sdist
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
